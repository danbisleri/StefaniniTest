@model Stefanini.Models.Search
<div class="row">
    <div class="col-sm-12">
        @using (Html.BeginForm("Index", "Home", FormMethod.Get, htmlAttributes: new { @class = "form-horizontal", id = "SearchForm" }))
        {
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.GenderId, (IEnumerable<SelectListItem>)ViewBag.Gender, "Select the gender", htmlAttributes: new { @class = "form-control", id = "GenderDropdown" })

                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.CityId, (IEnumerable<SelectListItem>)ViewBag.Cities, "Select the city", htmlAttributes: new { @class = "form-control", id = "CityDropdown" })
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.RegionId, (IEnumerable<SelectListItem>)ViewBag.Regions, "Select the region", htmlAttributes: new { @class = "form-control", id = "RegionDropdown" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-6">

                    @Html.LabelFor(model => model.LastPurchase, htmlAttributes: new { @class = "control-label" })

                    <div class='input-group date col-sm-3' id='datetimepicker1'>

                        @Html.EditorFor(model => model.LastPurchase, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>

                        @Html.ValidationMessageFor(model => model.LastPurchase, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.Until, htmlAttributes: new { @class = "control-label" })
                    <div class='input-group date col-sm-3' id='datetimepicker1'>

                        @Html.EditorFor(model => model.Until, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>

                        @Html.ValidationMessageFor(model => model.Until, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.ClassificationId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ClassificationId, (IEnumerable<SelectListItem>)ViewBag.Classifications, "All classifications", htmlAttributes: new { @class = "form-control" })
                </div>
                @if (ViewData["IsAdmin"] != null && ((bool)ViewData["IsAdmin"]))
                {
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.UserSysId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.UserSysId, (IEnumerable<SelectListItem>)ViewBag.Sellers, "All sellers", htmlAttributes: new { @class = "form-control" })
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <input type="submit" class="btn btn-block btn-success" value="Search" />
                </div>
                <div class="col-sm-2">
                    <input class="btn btn-block btn-default" value="Clear fields" onclick="window.location = '@Url.Action("Index", "Home")'" />
                </div>
            </div>
        }
    </div>
</div>